You are given a string s consisting only of characters 'a' and 'b'​​​​.
You can delete any number of characters in s to make s balanced. s is balanced if there is no pair of indices (i,j) such that i < j and s[i] = 'b' and s[j]= 'a'.
Return the minimum number of deletions needed to make s balanced.

class Solution {
public:
int minimumDeletions(string s) {
        ios_base::sync_with_stdio(false);
        cin.tie(nullptr);
        cout.tie(nullptr);
        int n = s.size();
        int ans = 0;
        int count_b = 0;
        for(int i=0;i<n;i++){
            if(s[i]=='b')count_b++;
            else{
                ans = min(ans+1,count_b);
            }
        }
        return ans;
    }
};