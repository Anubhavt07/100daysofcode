You are given a binary string s that contains at least one '1'.

You have to rearrange the bits in such a way that the resulting binary number is the maximum odd binary number that can be created from this combination.

Return a string representing the maximum odd binary number that can be created from the given combination.

class Solution {
public:
    string maximumOddBinaryNumber(string s) {
        int startingIndex = 0;
        for(int i=0;i<s.length()-1;++i){
            if(s[i] == '1' && s[s.length()-1] == '0') swap(s[i],s[s.length()-1]);
            else if(s[i] == '1'){
                while(startingIndex <= i && s[startingIndex] == '1') startingIndex++;
                if(startingIndex <= i) swap(s[i],s[startingIndex++]);                
            }
        }
        return s;
    }
};