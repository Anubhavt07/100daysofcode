A wonderful string is a string where at most one letter appears an odd number of times.
For example, "ccjjc" and "abab" are wonderful, but "ab" is not.
Given a string word that consists of the first ten lowercase English letters ('a' through 'j'), return the number of wonderful non-empty substrings in word. If the same substring appears multiple times in word, then count each occurrence separately.
A substring is a contiguous sequence of characters in a string.

class Solution {
public:
    int get(char c) {
        return c - 'a';
    }
    long long wonderfulSubstrings(string word) {
        vector<long long> cnt(1024, 0);
        cnt[0] = 1;
        int curState = 0;
        long long res = 0;
        for (char c : word) {
            curState ^= 1 << get(c);
            res += cnt[curState];
            for (char odd = 'a'; odd <= 'j'; odd++) {
                int oddState = curState ^ (1 << get(odd));
                res += cnt[oddState];
            }
            cnt[curState]++;
        }
        return res;
    }
};