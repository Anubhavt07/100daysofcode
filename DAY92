You are given the root of a binary tree where each node has a value in the range [0, 25] representing the letters 'a' to 'z'.
Return the lexicographically smallest string that starts at a leaf of this tree and ends at the root.
As a reminder, any shorter prefix of a string is lexicographically smaller.
For example, "ab" is lexicographically smaller than "aba".
A leaf of a node is a node that has no children.

class Solution {
public:
    string ans="|";
    void f(TreeNode* node, string s){
        if (!node) return;
        s=string(1, node->val+'a')+s;
        if (!node->left && !node->right){
            ans=min(ans, s);
        }
        f(node->left, s);
        f(node->right, s);
    }
    string smallestFromLeaf(TreeNode* root) {
        f(root, {});
        return ans;
    }
};